name: Dummy App - Build and Upload Image
on:
  push:
    branches: [ main ]

jobs:

  build-and-deploy:
    name: Build and Upload
    runs-on: ubuntu-latest

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS credentials for ECR
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::637644987251:role/StradumGithubActionsAccessRole
          role-session-name: GithubActions
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Generate Build ID
        id: build-id
        run: |
          branch=${GITHUB_REF##*/}
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "::set-output name=BUILD_ID::1.${ts}.${sha}"

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: stradumio/stradum-dummy-app
          IMAGE_TAG: ${{ steps.build-id.outputs.BUILD_ID }}
        run: |
          docker build -f src/main/docker/Dockerfile.multistage -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
